<!DOCTYPE html>
<html>
<head>
	<title>InfoActiv Editor Demo</title>

	<style>
		.floatright { float: right; }
		.floatleft { float: left; }
	</style>
	<script src="js/jquery-1.7.2.js"></script>
    <script type="text/javascript">
		function draw() {
			var context = getContext();
         
			var imageObj = new Image();
 
			imageObj.onload = function() {
				context.drawImage(imageObj,0,0);
			};
			
			imageObj.src = "Screen_shot_walmart.png";
		}
       
		window.onload = draw;
		
		function getContext(){
			var canvas = document.getElementById("uploadedGraphic");
			// set globals
			canvasWidth = canvas.width;
			canvasHeight = canvas.height;
			if (canvas.getContext) {
				return canvas.getContext('2d');
			} else {
				alert("uhoh");
			}
		}
    </script>
    <script type="text/javascript">
    	var regions = [];
    	function makeEdges(x,y){
    		var context = getContext();
    		var data = context.getImageData(x - 50, y - 50, 100, 100);
            var result = edge(data, context);
            context.putImageData(result.data, x-50 , y-50);
            var message = prompt("Please enter rollover text", "text");
            regions.push({
            				bbox: [(x-50), (y-50), (x+50), (y+50)], 
            				color: result.color,
            				adjustedColor: result.adjustedColor,
            				message: message
            			});		
    	}
    
    	function showRegionCount(){
    		alert(regions.length);
    	}
    	
    	function displayRegionMessage(x,y){	
    		for (var i=0; i<regions.length; i++){
    			var region = regions[i];
    			if ( inBox(region, x, y)){
    				alert(region.message);
    				return;
    			}
    		}
    	}
    	
    	function inBox(region, x, y){

    		var inbox = (x > region.bbox[0]) 
    			&& (x < region.bbox[2]) 
    			&& (y > region.bbox[1])
    			&& (y < region.bbox[3]);
    		if (!inbox) return false;
    		if (mode == 0){ // edit mode
    			// do nothing
    		} else if ( mode == 1){ // preview mode
    			var xyColor = getRGB(x,y);
    			//alert("color at (" + x + "," + y + ") is r=" + xyColor.r + " g=" + xyColor.g + " b=" + xyColor.b);
    			if (isApproxColor(region.adjustedColor, xyColor)){
    				return true;
    			}
    		} else { // run mode
    			var xyColor = getRGB(x,y);
    			if (isApproxColor(region.color, xyColor)){
    				return true;
    			} 
    		}
    		
    	}
    	
    	function isApproxColor(c1, c2){
    		var diff = Math.abs(c1.r - c2.r) + Math.abs(c1.g - c2.g) + Math.abs(c1.b - c2.b);
    		return (diff < 30);
    	}
    	
    	function displayColor(color){
    		return " {r=" + color.r + " g=" + color.g + " b=" + color.b + "}";
    	}
    	
    	function getRGB(x,y){
    		var context = getContext();
			var w = canvasWidth;
			var h = canvasHeight;
			var data = context.getImageData(x,y,1,1).data;
			var color = new Color(data[0], data[1], data[2]);
			return color;			
    	}
    </script>
    <script src="js/edgeDetection.js"></script>
    <script>
    // snippet obtained from http://stackoverflow.com/questions/1114465/getting-mouse-location-in-canvas
    /*
    	function getPosition(e) {

    		//this section is from http://www.quirksmode.org/js/events_properties.html
    		var targ;
    		if (!e)
        		e = window.event;
    		if (e.target)
        		targ = e.target;
    		else if (e.srcElement)
        		targ = e.srcElement;
    		if (targ.nodeType == 3) // defeat Safari bug
        		targ = targ.parentNode;

	    	// jQuery normalizes the pageX and pageY
    		// pageX,Y are the mouse positions relative to the document
    		// offset() returns the position of the element relative to the document
    		var x = e.pageX - $(targ).offset().left;
    		var y = e.pageY - $(targ).offset().top;

		    return {"x": x, "y": y};
		};

		// now just make sure you use this with jQuery
		// obviously you can use other events other than click
		
		var elm = document.getElementById("uploadedGraphic");
		$(elm).click(function(event) {
			// jQuery would normalize the event
			position = getPosition(event);
			//now you can use the x and y positions
			alert("X: " + position.x + " Y: " + position.y);
		});
		*/
    </script>
    
	<script type="text/javascript">

      document.addEventListener("DOMContentLoaded", init, false);

		var originalData; // global
      function init()
      {
        var canvas = document.getElementById("uploadedGraphic");
        canvas.addEventListener("mousedown", getPosition, false);
      }
      
      function restore(){
      	var context = getContext();
      	draw();
      	setMode(2); // run
      }

      function getPosition(event)
      {
        var x = new Number();
        var y = new Number();
        var canvas = document.getElementById("uploadedGraphic");

        if (event.x != undefined && event.y != undefined)
        {
          x = event.x;
          y = event.y;
        }
        else // Firefox method to get the position
        {
          x = event.clientX + document.body.scrollLeft +
              document.documentElement.scrollLeft;
          y = event.clientY + document.body.scrollTop +
              document.documentElement.scrollTop;
        }

        x -= canvas.offsetLeft;
        y -= canvas.offsetTop;
		if (mode == 0) { // edit mode
			makeEdges(x,y);

		} else {
			displayRegionMessage(x,y);
		}
        //alert("x: " + x + "  y: " + y);
      }
      
      
		var mode = 0; // edit=0 preview=1 run=2
		function setMode(value){
			mode = value;
		}
    </script>

</head>
<body>
	<div>
		<h3>InfoActiv Editor</h3>
	</div>
	<div id="toolBar">
		<img src="toolBar.png" class="floatLeft"/>
    	<canvas id="uploadedGraphic" width="600" height="400" class="floatRight"></canvas>          			
    </div>

    <input type="button" onClick="setMode(0)" value="edit"/>
    <input type="button" onClick="setMode(1)" value="preview"/>
    <input type="button" onClick="restore()" value="run"/>



</body>
</html>